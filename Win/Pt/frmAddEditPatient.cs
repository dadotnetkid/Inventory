using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using Helpers;
using Models;
using Models.Repository;
using System.Data.Entity;

namespace Win.Pt
{
    public partial class frmAddEditPatient : DevExpress.XtraEditors.XtraForm
    {

        public frmAddEditPatient(int? patientId, MethodType edit)
        {
            InitializeComponent();
            InitializeBinding();
            this.MethodType = edit;
            detail(patientId);
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext

        }

        private int? patientId;

        public void InitializeBinding()
        {
            using (UnitOfWork unitOfWork = new UnitOfWork())
            {
                SpeciesBindingSource.DataSource = unitOfWork.PatientsRepo.Fetch().GroupBy(x => x.Species)
                    .Select(x => new { Species = x.Key }).ToList();
                ColorBindingSource.DataSource = unitOfWork.PatientsRepo.Fetch().GroupBy(x => x.Color)
                    .Select(x => new { Color = x.Key }).ToList();
                BreedBindingSource.DataSource = unitOfWork.PatientsRepo.Fetch().GroupBy(x => x.Breed)
                    .Select(x => new { Breed = x.Key }).ToList();
                SexBindingSource.DataSource = unitOfWork.PatientsRepo.Fetch().GroupBy(x => x.Sex)
                    .Select(x => new { Sex = x.Key }).ToList();
                ownersBindingSource.DataSource = new BindingList<Owners>(unitOfWork.OwnersRepo.Get().ToList());
            }
        }

        void add()
        {
            if (this.MethodType != MethodType.Add)
                return;
            using (UnitOfWork unitOfWork = new UnitOfWork())
            {
                unitOfWork.PatientsRepo.Insert(new Models.Patients()
                {
                    PetName = txtPetName.Text,
                    DOB = dtDOB.EditValue.ToDate(),
                    Breed = cboBreed.EditValue.ToString(),
                    Species = cboSpecies.EditValue.ToString(),
                    Color = cboColor.EditValue.ToString(),
                    Sex = cboSex.EditValue.ToString(),
                    OwnerId = cboOwner.EditValue.ToInt()

                });
                unitOfWork.Save();
            }

        }

        void Edit()
        {
            if (this.MethodType != MethodType.Edit)
                return;
            using (UnitOfWork unitOfWork = new UnitOfWork())
            {
                unitOfWork.PatientsRepo.Update(new Models.Patients()
                {
                    Id = patientId.ToInt(),
                    PetName = txtPetName.Text,
                    DOB = dtDOB.EditValue.ToDate(),
                    Breed = cboBreed.EditValue.ToString(),
                    Species = cboSpecies.EditValue.ToString(),
                    Color = cboColor.EditValue.ToString(),
                    Sex = cboSex.EditValue.ToString(),
                    OwnerId = cboOwner.EditValue.ToInt()

                });
                unitOfWork.Save();
            }
        }

        void detail(int? Id)
        {
            this.patientId = Id;
            if (this.MethodType != MethodType.Edit)
                return;

            using (UnitOfWork unitOfWork = new UnitOfWork())
            {
                var item = unitOfWork.PatientsRepo.Find(m => m.Id == Id);
                txtPetName.Text = item.PetName;
                dtDOB.EditValue = item.DOB;
                cboBreed.EditValue = item.Breed;
                cboColor.EditValue = item.Color;
                cboSex.EditValue = item.Sex;
                cboSpecies.EditValue = item.Species;
                cboOwner.EditValue = item.OwnerId;
            }
        }
        public MethodType MethodType { get; set; }


        private void btnSubmit_Click(object sender, EventArgs e)
        {
            if (MessageBox.Show("Do you want to submit this?", "Submit", MessageBoxButtons.YesNo,
                    MessageBoxIcon.Question) == DialogResult.No)
                return;
            add();
            Edit();
            this.Close();
        }

        private void Patients_Load(object sender, EventArgs e)
        {

        }
    }
}